package com.neegix.development.api.infrastructure.repository.convert;

import com.neegix.development.api.domain.entity.Api;
import com.neegix.development.api.infrastructure.repository.dataobject.ApiDO;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;
import com.neegix.development.api.domain.entity.Module;

 /**
  * This file is auto-generated by nebula-framework-generator.
  * The auto-generation plugin was developed using IntelliJ IDEA Community Edition.
  * Thanks to JetBrains for their outstanding contributions to the developer community.
  * <p>
  * The code generated by this tool is owned by the user of the tool.
  * The tool itself is copyrighted by <a href="https://www.neegix.com">https://www.neegix.com</a>.
  *
  * @author <a href="https://www.neegix.com">https://www.neegix.com</a>
  * @version 1.0.0
  * @since 2024-11-22 11:43:14
  */

@Mapper
public interface ApiConverter {
    ApiConverter INSTANCE = Mappers.getMapper(ApiConverter.class);
     // Api → ApiDO（Module 对象 → Long ID）
     @Mapping(target = "module", source = "module.id")  // 提取 module.id 赋值给 ApiDO.module
     ApiDO convertToDO(Api api);

     // ApiDO → Api（Long ID → Module 对象）
     @Mapping(target = "module", expression = "java(createModuleFromId(apiDO.getModule()))")  // 根据 ID 构造 Module
     Api convertToEntity(ApiDO apiDO);

     // 自定义方法：用 moduleId 构造 Module 对象（可扩展查询数据库）
     default Module createModuleFromId(Long moduleId) {
         if (moduleId == null) {
             return null;
         }
         return new Module(moduleId, null);  // name 可设为 null 或从数据库查询
     }



}