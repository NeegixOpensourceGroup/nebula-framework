package com.neegix.development.api.infrastructure.repository.convert;

import com.neegix.development.api.application.dto.ApiDTO;
import com.neegix.development.api.domain.entity.ApiEntity;
import com.neegix.development.api.infrastructure.repository.dataobject.ApiDO;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;

import java.util.List;

 /**
  * This file is auto-generated by nebula-framework-generator.
  * The auto-generation plugin was developed using IntelliJ IDEA Community Edition.
  * Thanks to JetBrains for their outstanding contributions to the developer community.
  * <p>
  * The code generated by this tool is owned by the user of the tool.
  * The tool itself is copyrighted by <a href="https://www.neegix.com">https://www.neegix.com</a>.
  *
  * @author <a href="https://www.neegix.com">https://www.neegix.com</a>
  * @version 1.0.0
  * @since 2024-11-22 11:43:14
  */

@Mapper
public interface ApiConverter {
    ApiConverter INSTANCE = Mappers.getMapper(ApiConverter.class);
    ApiDO covertDO(ApiEntity apiEntity);

    @Mapping(target = "startCreateTime", ignore = true)
    @Mapping(target = "startUpdateTime", ignore = true)
    @Mapping(target = "endCreateTime", ignore = true)
    @Mapping(target = "endUpdateTime", ignore = true)
    ApiDTO covertDTO(ApiDO apiDO);

    @Mapping(target = "startCreateTime", ignore = true)
    @Mapping(target = "startUpdateTime", ignore = true)
    @Mapping(target = "endCreateTime", ignore = true)
    @Mapping(target = "endUpdateTime", ignore = true)
    List<ApiDTO> covertDTOS(List<ApiDO> apiDOS);
}