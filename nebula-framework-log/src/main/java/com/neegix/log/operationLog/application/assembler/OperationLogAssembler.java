package com.neegix.log.operationLog.application.assembler;

import com.neegix.log.operationLog.application.dto.OperationLogDTO;
import com.neegix.log.operationLog.interfaces.vo.OperationLogVO;
import com.neegix.log.operationLog.domain.entity.OperationLogEntity;
import com.neegix.log.operationLog.interfaces.form.NewOperationLogForm;
import com.neegix.log.operationLog.interfaces.form.QueryOperationLogForm;
import com.neegix.log.operationLog.interfaces.form.UpdateOperationLogForm;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;
import java.util.List;

 /**
  * This file is auto-generated by nebula-framework-generator.
  * The auto-generation plugin was developed using IntelliJ IDEA Community Edition.
  * Thanks to JetBrains for their outstanding contributions to the developer community.
  * <p>
  * The code generated by this tool is owned by the user of the tool.
  * The tool itself is copyrighted by <a href="https://www.neegix.com">https://www.neegix.com</a>.
  *
  * @author <a href="https://www.neegix.com">https://www.neegix.com</a>
  * @version 1.0.0
  * @since 2024-11-24 19:51:10
  */

@Mapper
public interface OperationLogAssembler {
    OperationLogAssembler INSTANCE = Mappers.getMapper(OperationLogAssembler.class);

    @Mapping(target = "id", ignore = true)
    @Mapping(target = "createTime", ignore = true)
    @Mapping(target = "updateTime", ignore = true)
    @Mapping(target = "createUser", ignore = true)
    @Mapping(target = "updateUser", ignore = true)
    OperationLogEntity covertEntity(NewOperationLogForm newOperationLogForm);

    @Mapping(target = "createTime", ignore = true)
    @Mapping(target = "updateTime", ignore = true)
    @Mapping(target = "createUser", ignore = true)
    @Mapping(target = "updateUser", ignore = true)
    OperationLogEntity covertEntity(UpdateOperationLogForm updateOperationLogForm);

    @Mapping(target = "createTime", ignore = true)
    @Mapping(target = "updateTime", ignore = true)
    OperationLogDTO covertDTO(QueryOperationLogForm queryOperationLogForm);

    List<OperationLogVO> covertVO(List<OperationLogDTO> OperationLogDTOs);

    OperationLogVO covertVO(OperationLogDTO queryOperationLogDTO);
}