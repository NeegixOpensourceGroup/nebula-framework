<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--
    This file is auto-generated by nebula-framework-generator.
    The auto-generation plugin was developed using IntelliJ IDEA Community Edition.
    Thanks to JetBrains for their outstanding contributions to the developer community.

    The code generated by this tool is owned by the user of the tool.
    The tool itself is copyrighted by https://www.neegix.com.

    @author https://www.neegix.com
    @version 1.0.0
    @since 2024-12-19 15:39:21
-->

<mapper namespace="com.neegix.log.loginLog.infrastructure.repository.mapper.LoginLogMapper">

    <!-- 登录日志-表和对象映射关系 -->
    <resultMap id="LoginLogResultMap" type="com.neegix.log.loginLog.infrastructure.repository.dataobject.LoginLogDO">
        <id column="id" property="id" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="create_user" property="createUser" />
        <result column="update_user" property="updateUser" />
        <result column="user" property="user" />
        <result column="ip" property="ip" />
        <result column="area" property="area" />
        <result column="type" property="type" />
        <result column="client" property="client" />
        <result column="enabled" property="enabled" />
        <result column="deleted" property="deleted" />
    </resultMap>

    <!-- 登录日志-查询条件 -->
    <sql id="wheres">
        <where>
            <if test="whereClauses != null and whereClauses.size() > 0">
                <foreach collection="whereClauses" item="group" separator=" OR ">
                    <if test="group.wheres != null and group.wheres.size() > 0">
                        <trim prefix="(" suffix=")" prefixOverrides="AND ">
                            <foreach collection="group.wheres" item="where" separator=" AND ">
                                <choose>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@EQUAL and where.value != null">
                                        ${where.column} = #{where.value}
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@NOT_EQUAL and where.value != null">
                                        ${where.column} != #{where.value}
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@GREATER_THAN and where.value != null">
                                        ${where.column} &gt; #{where.value}
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@LESS_THAN and where.value != null">
                                        ${where.column} &lt; #{where.value}
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@GREATER_EQUAL_THAN and where.value != null">
                                        ${where.column} &gt;= #{where.value}
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@LESS_EQUAL_THAN and where.value != null">
                                        ${where.column} &lt;= #{where.value}
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@LIKE and where.prefix and where.suffix and where.value != null">
                                        ${where.column} LIKE CONCAT('%', #{where.value}, '%')
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@LIKE and where.prefix and !where.suffix and where.value != null">
                                        ${where.column} LIKE CONCAT('%', #{where.value})
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@LIKE and !where.prefix and where.suffix and where.value != null">
                                        ${where.column} LIKE CONCAT(#{where.value}, '%')
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@LIKE and !where.prefix and !where.suffix and where.value != null">
                                        ${where.column} LIKE #{where.value}
                                    </when>

                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@NOT_LIKE and where.prefix and where.suffix and where.value != null">
                                        ${where.column} NOT LIKE CONCAT('%', #{where.value}, '%')
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@NOT_LIKE and where.prefix and !where.suffix and where.value != null">
                                        ${where.column} NOT LIKE CONCAT('%', #{where.value})
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@NOT_LIKE and !where.prefix and where.suffix and where.value != null">
                                        ${where.column} NOT LIKE CONCAT(#{where.value}, '%')
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@NOT_LIKE and !where.prefix and !where.suffix and where.value != null">
                                        ${where.column} NOT LIKE #{where.value}
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@IN and where.value != null and where.value.size() > 0">
                                       ${where.column} IN
                                        <foreach collection="where.value" item="item" open="(" separator="," close=")">
                                            #{item}
                                        </foreach>
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@NOT_IN and where.value != null and where.value.size() > 0">
                                        ${where.column} NOT IN
                                        <foreach collection="where.value" item="item" open="(" separator="," close=")">
                                            #{item}
                                        </foreach>
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@IS_NULL">
                                        ${where.column} IS NULL
                                    </when>
                                    <when test="where.enumOperator == @com.neegix.application.query.EnumOperator@IS_NOT_NULL">
                                        ${where.column} IS NOT NULL
                                    </when>
                                    <!-- 添加其他操作符的处理 -->
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </if>
        </where>
    </sql>

    <!-- 登录日志-字段列 -->
    <sql id="columns">
       id,create_time,update_time,create_user,update_user,user,ip,area,type,client,enabled,deleted
    </sql>

    <!-- 条件查询-登录日志-数量 -->
    <select id="selectCount" resultType="java.lang.Long">
        select count(1) from sys_login_log
        <include refid="wheres" />
        <if test="groupByClauses != null and groupByClauses.size() > 0">
            GROUP BY
            <foreach collection="groupByClauses" item="groupBy" separator=", ">
                ${groupBy}
            </foreach>
        </if>
        <if test="havingClauses != null and havingClauses.size() > 0">
            HAVING
            <foreach collection="havingClauses" item="having" separator=" AND ">
                ${having}
            </foreach>
        </if>
    </select>

    <!-- 条件查询-登录日志-单条记录 -->
    <select id="selectOne" resultMap="LoginLogResultMap">
        SELECT
        <if test="distinct">DISTINCT</if>
        <choose>
            <when test="groupByClauses != null and groupByClauses.size() > 0">
                <foreach collection="groupByClauses" item="groupBy" separator=", ">
                    ${groupBy}
                </foreach>
            </when>
            <otherwise>
                <include refid="columns" />
            </otherwise>
        </choose>
        FROM sys_login_log
        <include refid="wheres" />
        <if test="groupByClauses != null and groupByClauses.size() > 0">
            GROUP BY
            <foreach collection="groupByClauses" item="groupBy" separator=", ">
                ${groupBy}
            </foreach>
        </if>
        <if test="havingClauses != null and havingClauses.size() > 0">
            HAVING
            <foreach collection="havingClauses" item="having" separator=" AND ">
                ${having}
            </foreach>
        </if>
        <if test="orderByClauses != null and !orderByClauses.isEmpty()">
            ORDER BY
            <foreach collection="orderByClauses" item="orderBy" separator=", ">
                ${orderBy.column} ${orderBy.enumOrder}
            </foreach>
        </if>
        <if test="pager != null">
            LIMIT #{pager.offset}, #{pager.pageSize}
        </if>
    </select>

    <!-- 条件查询-登录日志-记录 -->
    <select id="selectList" resultMap="LoginLogResultMap">
        SELECT
        <if test="distinct">DISTINCT</if>
        <choose>
            <when test="groupByClauses != null and groupByClauses.size() > 0">
                <foreach collection="groupByClauses" item="groupBy" separator=", ">
                    ${groupBy}
                </foreach>
            </when>
            <otherwise>
                <include refid="columns" />
            </otherwise>
        </choose>
        FROM sys_login_log
        <include refid="wheres" />
        <if test="groupByClauses != null and groupByClauses.size() > 0">
            GROUP BY
            <foreach collection="groupByClauses" item="groupBy" separator=", ">
                ${groupBy}
            </foreach>
        </if>
        <if test="havingClauses != null and havingClauses.size() > 0">
            HAVING
            <foreach collection="havingClauses" item="having" separator=" AND ">
                ${having}
            </foreach>
        </if>
        <if test="orderByClauses != null and !orderByClauses.isEmpty()">
            ORDER BY
            <foreach collection="orderByClauses" item="orderBy" separator=", ">
                ${orderBy.column} ${orderBy.enumOrder}
            </foreach>
        </if>
        <if test="pager != null">
            LIMIT #{pager.offset}, #{pager.pageSize}
        </if>
    </select>

    <!-- 根据Id查询-登录日志-记录 -->
    <select id="selectByPrimaryKey" resultMap="LoginLogResultMap">
        select <include refid="columns" /> from sys_login_log  where id=#{id,jdbcType=BIGINT}
    </select>

    <!--新增-登录日志-记录-->
    <insert id="insert" parameterType="com.neegix.log.loginLog.infrastructure.repository.dataobject.LoginLogDO">
      insert into sys_login_log
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">id,</if>
        <if test="createTime != null">create_time,</if>
        <if test="updateTime != null">update_time,</if>
        <if test="createUser != null">create_user,</if>
        <if test="updateUser != null">update_user,</if>
        <if test="user != null">user,</if>
        <if test="ip != null">ip,</if>
        <if test="area != null">area,</if>
        <if test="type != null">type,</if>
        <if test="client != null">client,</if>
        <if test="enabled != null">enabled,</if>
        <if test="deleted != null">deleted,</if>
      </trim>
      <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
        <if test="id != null">#{id},</if>
        <if test="createTime != null">#{createTime},</if>
        <if test="updateTime != null">#{updateTime},</if>
        <if test="createUser != null">#{createUser},</if>
        <if test="updateUser != null">#{updateUser},</if>
        <if test="user != null">#{user},</if>
        <if test="ip != null">#{ip},</if>
        <if test="area != null">#{area},</if>
        <if test="type != null">#{type},</if>
        <if test="client != null">#{client},</if>
        <if test="enabled != null">#{enabled},</if>
        <if test="deleted != null">#{deleted},</if>
      </trim>
    </insert>

    <!--更新-登录日志-记录-->
    <update id="updateByPrimaryKey" parameterType="com.neegix.log.loginLog.infrastructure.repository.dataobject.LoginLogDO">
        update sys_login_log
          <set>
            <if test="createTime != null">
              create_time = #{createTime},
            </if>
            <if test="updateTime != null">
              update_time = #{updateTime},
            </if>
            <if test="createUser != null">
              create_user = #{createUser},
            </if>
            <if test="updateUser != null">
              update_user = #{updateUser},
            </if>
            <if test="user != null">
              user = #{user},
            </if>
            <if test="ip != null">
              ip = #{ip},
            </if>
            <if test="area != null">
              area = #{area},
            </if>
            <if test="type != null">
              type = #{type},
            </if>
            <if test="client != null">
              client = #{client},
            </if>
            <if test="enabled != null">
              enabled = #{enabled},
            </if>
            <if test="deleted != null">
              deleted = #{deleted},
            </if>
          </set>
          where id = #{id}
    </update>

    <!--批量删除-登录日志-记录-->
    <delete id="deleteByPrimaryKeys">
        delete from sys_login_log
        <where>
            id in
            <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
                #{id, jdbcType=BIGINT}
            </foreach>
        </where>
    </delete>

</mapper>