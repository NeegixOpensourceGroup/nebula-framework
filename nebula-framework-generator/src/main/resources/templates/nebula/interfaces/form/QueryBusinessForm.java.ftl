<#assign currentTime = .now>
package ${templateTable.packageName}.${templateTable.javaTableName[0]?lower_case+templateTable.javaTableName[1..]}.interfaces.form;

import lombok.Data;
<#-- 过滤数据 -->
<#assign filteredTypes = []>
<#list templateTable.columns as column>
    <#assign filteredTypes = filteredTypes + [column.fullyQualifiedJavaType]>
</#list>

<#-- 去重 -->
<#assign uniqueTypes = []>
<#list filteredTypes as type>
    <#if !uniqueTypes?seq_contains(type)>
        <#assign uniqueTypes = uniqueTypes + [type]>
    </#if>
</#list>

<#-- 输出结果，排除包含 "lang" 的类型 -->
<#list uniqueTypes as type>
    <#if !type?contains("lang")>
import ${type};
    </#if>
</#list>

 /**
  * This file is auto-generated by nebula-framework-generator.
  * The auto-generation plugin was developed using IntelliJ IDEA Community Edition.
  * Thanks to JetBrains for their outstanding contributions to the developer community.
  * <p>
  * The code generated by this tool is owned by the user of the tool.
  * The tool itself is copyrighted by <a href="${templateTable.copyright}">${templateTable.copyright}</a>.
  *
  * @author <a href="${templateTable.copyright}">${templateTable.copyright}</a>
  * @version ${templateTable.version}
  * @since ${currentTime?string("yyyy-MM-dd HH:mm:ss")}
  */

@Data
public class Query${templateTable.javaTableName}Form {
    <#if templateTable.columns?exists>
        <#list templateTable.columns as column>
            <#if column.fullyQualifiedJavaType?contains("Instant")>
    // ${column.description}-开始
    private ${column.javaType} start${column.javaName?cap_first};
    // ${column.description}-结束
    private ${column.javaType} end${column.javaName?cap_first};
            <#else>
    // ${column.description}
    private ${column.javaType} ${column.javaName};
            </#if>
        </#list>
    </#if>
}


