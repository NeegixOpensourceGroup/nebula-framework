<#assign currentTime = .now>
package ${templateTable.packageName}.${templateTable.javaTableName[0]?lower_case+templateTable.javaTableName[1..]}.application.assembler;

import ${templateTable.packageName}.${templateTable.javaTableName[0]?lower_case+templateTable.javaTableName[1..]}.application.dto.${templateTable.javaTableName}DTO;
import ${templateTable.packageName}.${templateTable.javaTableName[0]?lower_case+templateTable.javaTableName[1..]}.interfaces.vo.${templateTable.javaTableName}VO;
import ${templateTable.packageName}.${templateTable.javaTableName[0]?lower_case+templateTable.javaTableName[1..]}.domain.entity.${templateTable.javaTableName}Entity;
import ${templateTable.packageName}.${templateTable.javaTableName[0]?lower_case+templateTable.javaTableName[1..]}.interfaces.form.New${templateTable.javaTableName}Form;
import ${templateTable.packageName}.${templateTable.javaTableName[0]?lower_case+templateTable.javaTableName[1..]}.interfaces.form.Query${templateTable.javaTableName}Form;
import ${templateTable.packageName}.${templateTable.javaTableName[0]?lower_case+templateTable.javaTableName[1..]}.interfaces.form.Update${templateTable.javaTableName}Form;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;
import java.util.List;

 /**
  * This file is auto-generated by nebula-framework-generator.
  * The auto-generation plugin was developed using IntelliJ IDEA Community Edition.
  * Thanks to JetBrains for their outstanding contributions to the developer community.
  * <p>
  * The code generated by this tool is owned by the user of the tool.
  * The tool itself is copyrighted by <a href="${templateTable.copyright}">${templateTable.copyright}</a>.
  *
  * @author <a href="${templateTable.copyright}">${templateTable.copyright}</a>
  * @version ${templateTable.version}
  * @since ${currentTime?string("yyyy-MM-dd HH:mm:ss")}
  */

@Mapper
public interface ${templateTable.javaTableName}Assembler {
    ${templateTable.javaTableName}Assembler INSTANCE = Mappers.getMapper(${templateTable.javaTableName}Assembler.class);

    ${templateTable.javaTableName}Entity covertEntity(New${templateTable.javaTableName}Form new${templateTable.javaTableName}Form);

    ${templateTable.javaTableName}Entity covertEntity(Update${templateTable.javaTableName}Form update${templateTable.javaTableName}Form);

    ${templateTable.javaTableName}DTO covertDTO(Query${templateTable.javaTableName}Form query${templateTable.javaTableName}Form);

    List<${templateTable.javaTableName}VO> covertVO(List<${templateTable.javaTableName}DTO> ${templateTable.javaTableName}DTOs);

    ${templateTable.javaTableName}VO covertVO(${templateTable.javaTableName}DTO query${templateTable.javaTableName}DTO);
}