
package com.neegix.organization.bizUnit.interfaces.controller;

import com.neegix.exception.BusinessRuntimeException;
import com.neegix.organization.bizUnit.application.assembler.BizUnitAssembler;
import com.neegix.organization.bizUnit.application.cqrs.query.BizUnitQueryRepository;
import com.neegix.organization.bizUnit.application.service.BizUnitService;
import com.neegix.organization.bizUnit.domain.entity.BizUnitEntity;
import com.neegix.organization.bizUnit.interfaces.form.NewBizUnitForm;
import com.neegix.organization.bizUnit.interfaces.form.QueryBizUnitForm;
import com.neegix.organization.bizUnit.interfaces.form.UpdateBizUnitForm;
import com.neegix.organization.bizUnit.interfaces.vo.BizUnitVO;
import com.neegix.result.Result;
import jakarta.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;
import java.util.Optional;

 /**
  * This file is auto-generated by nebula-framework-generator.
  * The auto-generation plugin was developed using IntelliJ IDEA Community Edition.
  * Thanks to JetBrains for their outstanding contributions to the developer community.
  * <p>
  * The code generated by this tool is owned by the user of the tool.
  * The tool itself is copyrighted by <a href="https://www.neegix.com">https://www.neegix.com</a>.
  *
  * @author <a href="https://www.neegix.com">https://www.neegix.com</a>
  * @version 1.0.0
  * @since 2024-12-10 10:58:59
  */

@RestController
@RequestMapping("/api/v1/bizUnit")
public class BizUnitController {

    @Autowired
    private BizUnitQueryRepository bizUnitQueryRepository;

    @Autowired
    private BizUnitService bizUnitService;

    @PreAuthorize("hasAuthority('organization:bizUnit:add')")
    @PostMapping
    public Result<Void> createBizUnit(@RequestBody @Valid NewBizUnitForm bizUnitForm){
        Void result = bizUnitService.createBizUnit(BizUnitAssembler.INSTANCE.covertEntity(bizUnitForm));
        return Result.success("创建成功", result);
    }

    @PreAuthorize("hasAuthority('organization:bizUnit:modify')")
    @PutMapping("/{id}")
    public Result<Void> updateBizUnit(@PathVariable Long id, @RequestBody @Valid UpdateBizUnitForm bizUnitForm){
        BizUnitEntity bizUnitEntity = BizUnitAssembler.INSTANCE.covertEntity(bizUnitForm);
        bizUnitEntity.setId(id);
        Void result = bizUnitService.modifyBizUnit(bizUnitEntity);
        return Result.success("更新成功",result);
    }

    @PreAuthorize("hasAuthority('organization:bizUnit:list')")
    @GetMapping
    public Result<List<BizUnitVO>> getBizUnits(@ModelAttribute QueryBizUnitForm bizUnitForm){
        if(bizUnitForm == null) {
            bizUnitForm = new QueryBizUnitForm();
        }
        List<BizUnitVO> result = bizUnitQueryRepository.findList(BizUnitAssembler.INSTANCE.covertDTO(bizUnitForm));
        return Result.success("查询成功",result);
    }

    @PreAuthorize("hasAuthority('organization:bizUnit:get')")
    @GetMapping("/{id}")
    public Result<BizUnitVO> getBizUnitById(@PathVariable("id") Long id) {
        Optional<BizUnitVO> optional = bizUnitQueryRepository.findById(id);
        return Result.success("获取成功", optional.orElseThrow(()-> new BusinessRuntimeException("查询结果不存在")));
    }

    @PreAuthorize("hasAuthority('organization:bizUnit:remove')")
    @DeleteMapping
    public Result<Void> removeBizUnit(@RequestBody List<Long> ids){
        return Result.success("删除成功", bizUnitService.removeBizUnit(ids));
    }
}