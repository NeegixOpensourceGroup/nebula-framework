package com.neegix.organization.psn.application.assembler;

import com.neegix.organization.psn.application.dto.PsnDTO;
import com.neegix.organization.psn.interfaces.vo.PsnVO;
import com.neegix.organization.psn.domain.entity.PsnEntity;
import com.neegix.organization.psn.interfaces.form.NewPsnForm;
import com.neegix.organization.psn.interfaces.form.QueryPsnForm;
import com.neegix.organization.psn.interfaces.form.UpdatePsnForm;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;
import java.util.List;

 /**
  * This file is auto-generated by nebula-framework-generator.
  * The auto-generation plugin was developed using IntelliJ IDEA Community Edition.
  * Thanks to JetBrains for their outstanding contributions to the developer community.
  * <p>
  * The code generated by this tool is owned by the user of the tool.
  * The tool itself is copyrighted by <a href="https://www.neegix.com">https://www.neegix.com</a>.
  *
  * @author <a href="https://www.neegix.com">https://www.neegix.com</a>
  * @version 1.0.0
  * @since 2024-12-11 15:13:32
  */

@Mapper
public interface PsnAssembler {
    PsnAssembler INSTANCE = Mappers.getMapper(PsnAssembler.class);


    @Mapping(target = "id", ignore = true)
    @Mapping(target = "createTime", ignore = true)
    @Mapping(target = "updateTime", ignore = true)
    @Mapping(target = "createUser", ignore = true)
    @Mapping(target = "updateUser", ignore = true)
    PsnEntity covertEntity(NewPsnForm newPsnForm);

    @Mapping(target = "createTime", ignore = true)
    @Mapping(target = "updateTime", ignore = true)
    @Mapping(target = "createUser", ignore = true)
    @Mapping(target = "updateUser", ignore = true)
    PsnEntity covertEntity(UpdatePsnForm updatePsnForm);

    @Mapping(target = "createTime", ignore = true)
    @Mapping(target = "updateTime", ignore = true)
    PsnDTO covertDTO(QueryPsnForm queryPsnForm);

    List<PsnVO> covertVO(List<PsnDTO> PsnDTOs);

    PsnVO covertVO(PsnDTO queryPsnDTO);
}